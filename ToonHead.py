from direct.actor.Actor import Actor
from panda3d.core import *

class ToonHead(Actor):
    '''Generates a head based on the gender and the type'''
    def __init__(self, headType, gender='m'):
        self.head_type = headType
        self.gender = gender

        # General pieces of the head
        headModel = NodePath('head_model')
        headFront = NodePath('head_front')
        headMuzzle = NodePath('head_muzzle')
        headEyes = NodePath('head_eyes')
        headEars = NodePath('head_ears')
        left_pupil = NodePath('left_pupil')
        right_pupil = NodePath('right_pupil')

        self.head_node = NodePath('head_node')
        self.head_node.setPos(2.5,35,2.5)
        self.head_node.setHpr(180,0,0)

        self.generateHead(headType, gender)

    def generateHead(self, head_type, headGender=None):
        '''Generates a head with type head_type, gender adds eyelashes'''

        # All the bears
        if head_type == 'bls': # Big head, small muzzle
            headModel = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-long')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-front-long')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*eyes-long')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*ears-long')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilL_long')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilR_long')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'bss': # Small head, small muzzle
            headModel = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'bsl': # Small head, big muzzle
            headModel = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'bll': # big head, big muzzle
            headModel = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-long')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*head-front-long')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*eyes-long')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*ears-long')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilL_long')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/bear-heads-1000.bam').find('**/*joint_pupilR_long')
            right_pupil.reparentTo(self.head_node)

        # All the cats
        if head_type == 'cls': # Big head, small muzzle
            headModel = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-long')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-front-long')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*eyes-long')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*ears-long')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilL_long')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilR_long')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'css': # Small head, small muzzle
            headModel = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'csl': # Small head, big muzzle
            headModel = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'cll': # Big head, big muzzle
            headModel = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-long')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*head-front-long')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*eyes-long')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*ears-long')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilL_long')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/cat-heads-1000.bam').find('**/*joint_pupilR_long')
            right_pupil.reparentTo(self.head_node)
        
        # All the crocodiles
        if head_type == 'crls': # Big head, small muzzle
            headModel = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-long')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-front-long')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*eyes-long')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*ears-long')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilL_long')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilR_long')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'crss': # Small head, small muzzle
            headModel = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'crsl': # Small head, big muzzle
            headModel = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'crll': # Big head, big muzzle
            headModel = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-long')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*head-front-long')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*eyes-long')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*ears-long')
            headEars.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilL_long')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/crocodile-heads-1000.bam').find('**/*joint_pupilR_long')
            right_pupil.reparentTo(self.head_node)

        # All the deers
        if head_type == 'dels': # Big antlers, small muzzle
            antlers= loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*antlers-long')
            antlers.reparentTo(self.head_node)
            headModel = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            headNose = headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*nose-short')
            headNose.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'dess': # Small antlers, small muzzle
            antlers= loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*antlers-short')
            antlers.reparentTo(self.head_node)
            headModel = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*muzzle-short-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            headNose = headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*nose-short')
            headNose.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'desl': # Small head, big muzzle
            antlers= loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*antlers-short')
            antlers.reparentTo(self.head_node)
            headModel = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            headNose = headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*nose-long')
            headNose.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)
        elif head_type == 'dell': # Big Antlers, big muzzle
            antlers= loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*antlers-long')
            antlers.reparentTo(self.head_node)
            headModel = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-short')
            headModel.reparentTo(self.head_node)
            headFront = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*head-front-short')
            headFront.reparentTo(self.head_node)
            headMuzzle = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*muzzle-long-neutral')
            headMuzzle.reparentTo(self.head_node)
            headEyes = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*eyes-short')
            headEyes.reparentTo(self.head_node)
            headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*ears-short')
            headEars.reparentTo(self.head_node)
            headNose = headEars = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*nose-long')
            headNose.reparentTo(self.head_node)
            left_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilL_short')
            left_pupil.reparentTo(self.head_node)
            right_pupil = loader.loadModel('phase_3/models/char/deer-heads-1000.bam').find('**/*joint_pupilR_short')
            right_pupil.reparentTo(self.head_node)

        # All the dogs

        # All the ducks

        # All the horses

        # All the monkeys

        # All the mice

        # All the pigs

        # All the rabbits


        self.head_node.reparentTo(render)

    def removeHead(self):
        self.head_node.getChildren().detach()


